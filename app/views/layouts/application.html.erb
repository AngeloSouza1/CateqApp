<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "CateqApp" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <link rel="manifest" href="/manifest.json">
    <link rel="icon" href="<%= asset_path 'logo.png' %>" type="image/png">
    <link rel="apple-touch-icon" href="<%= asset_path 'logo.png' %>">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    <%= stylesheet_link_tag "aulas", media: "all" %>
    <%= stylesheet_link_tag "home", media: "all" %>
    <%= stylesheet_link_tag "postagens", media: "all" %>
    <%= javascript_include_tag "trix", "actiontext", defer: true %>
    <%= stylesheet_link_tag "trix", "actiontext", media: "all" %>
  </head>

  <body>
    <%= yield %>

    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const form = document.getElementById("edit-aula-form");
        const submitButton = document.getElementById("submit-btn");

        // Se o formulário é de nova aula, habilita o botão por padrão
        if (!form) return; // Evita erros em outras páginas
        if (form.dataset.newRecord === "true") {
          submitButton.disabled = false;
          return;
        }

        let originalFormState = new FormData(form);

        // Função para verificar se há alterações
        function checkForChanges() {
          let currentFormState = new FormData(form);
          for (let [key, value] of currentFormState.entries()) {
            if (value !== originalFormState.get(key)) {
              submitButton.disabled = false;
              return;
            }
          }
          submitButton.disabled = true;
        }

        // Monitora mudanças em todos os inputs e textareas
        form.querySelectorAll("input, textarea, select").forEach(input => {
          input.addEventListener("input", checkForChanges);
        });

        // Monitora mudanças no editor Trix, caso seja utilizado
        document.addEventListener("trix-change", checkForChanges);
      });
    </script>
  </body>
</html>
